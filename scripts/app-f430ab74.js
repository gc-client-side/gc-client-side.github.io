"use strict";function configure(t){t.when("/",{templateUrl:"app/main/main.html"}).otherwise({redirectTo:"/"})}function tdpPost(){return{scope:{posts:"=",post:"=",key:"=",taskList:"=",onRemove:"&"},replace:!0,templateUrl:"app/components/todo/todo.html",controller:TodoPostCtrl,controllerAs:"td",bindToController:!0}}function TodoPostCtrl(t){function e(e,o){t.updatePosition(s.key,e,o)}function o(e,o){t.updateIndices(s.key,e,o)}var s=this;s.colors=t.postColors,s.checkPost=t.checkPost,s.savePost=t.savePost,s.updatePos=e,s.updateIndices=o}function tdpDrag(t){function e(e,o,s,n){function a(e){l=e.pageX-p,r=e.pageY-k;var s=u.position["z-index"],a=n.posts.length;s!==a&&(o.css({"z-index":a+1}),n.updateIndices(s,a)),t.on("mousemove",c),t.on("mouseup",i)}function c(t){t.preventDefault(),p=t.pageX-l,k=t.pageY-r,o.css({top:k+"px",left:p+"px"})}function i(){t.off("mousemove",c),t.off("mouseup",i),u.position.left!==p&&u.position.top!==k&&n.updatePos(p,k)}var l,r,u=e.post,d=u.position,p=d.left,k=d.top;o.on("mousedown",function(t){a(t)})}return{require:"tdpPost",link:e}}function chooseColor(){function t(t,e,o){e.on("click",function(){var e=t.td;e.post.color=o.color,e.posts.$save(e.key),t.$apply()})}return{link:t}}function subtasks(){return{scope:{taskList:"=",taskId:"="},templateUrl:"app/components/subtasks/subtasks.html",controller:SubtaskCtrl,controllerAs:"st",bindToController:!0}}function SubtaskCtrl(t,e){function o(){i.taskId?(i.subtasks=e.loadSubtasks(i.taskList,i.taskId),t.cancel(l)):i.subtasks=[]}function s(t){(13===t.keyCode||"click"===t.type)&&(e.addSubtask(i.subtasks,i.newTask),i.newTask="")}function n(t){e.checkSubtask(i.subtasks,t)}function a(t){e.saveSubtask(i.subtasks,t)}function c(t){e.removeSubtask(i.subtasks,t)}var i=this,l=t(o,200);i.addSubtask=s,i.checkSubtask=n,i.saveSubtask=a,i.removeSubtask=c}function tdpMenu(){function t(){function t(){e.sideMenuOn=!e.sideMenuOn}var e=this;e.sideMenuOn=!1,e.toggleSideMenu=t}return{replace:!0,templateUrl:"app/components/menu/menu.html",controller:t,controllerAs:"tdpMenu"}}function tdpFilterCtrl(t,e){function o(t){var e=angular.element(t.currentTarget).children(),o=t.target;e.removeClass("active"),o.className+=" active"}function s(){t.filterState=""}function n(){t.filterState=!1}function a(){t.filterState=!0}function c(){e.removeCheckedPosts()}var i=this;i.toggleActive=o,i.filterAll=s,i.filterActive=n,i.filterCompleted=a,i.clearCompleted=c}function tdpCanvas(){return{replace:!0,transclude:!0,template:'<main id="canvas" ng-click="enableDrag($event)" ng-dblclick="canvas.addPost($event)"></main>',controller:CanvasCtrl,controllerAs:"canvas"}}function CanvasCtrl(t){var e=this;e.posts=t.posts,e.taskList=t.taskList,e.draggable=!0,e.addPost=t.addPost,e.removePost=t.removePost}function postService(t,e,o){function s(t){"canvas"===t.target.id&&u(t.pageY,t.pageX)}function n(t){g[t].checked=!g[t].checked,g.$save(t)}function a(t){function e(){g.$save(t)}p&&o.cancel(p),p=o(e,500)}function c(t,e){confirm("Are you sure? Deletes are permanent!")&&d(t,e)}function i(){confirm("Are you sure? Deletes are permanent!")&&angular.forEach(g,function(t,e){t.checked===!0&&d(e,t.taskId)})}function l(t,e,o){g[t].position.left=e,g[t].position.top=o,g.$save(t)}function r(t,e,o){function s(o,s){s!==t&&o.position["z-index"]>e&&(o.position["z-index"]-=1,g.$save(s))}g[t].position["z-index"]=o,g.$save(t),angular.forEach(g,s)}function u(t,e){function o(t){t.update({taskId:t.key()})}var s={title:"",description:"",color:m[Math.floor(Math.random()*m.length)],checked:!1,position:{top:t,left:e,"z-index":g.length+1}};g.$add(s).then(o)}function d(e,o){function s(e){h.$remove(h.$indexFor(o)).then(function(){g=t(e.parent())})}g.$remove(e).then(s)}var p,k=new Firebase(e),v=k.child("posts"),f=k.child("tasklist"),m=["brown","orange","blue","light-blue","green","purple","yellow"],g=t(v),h=t(f);return{postColors:m,posts:g,taskList:h,addPost:s,checkPost:n,savePost:a,removePost:c,removeCheckedPosts:i,updatePosition:l,updateIndices:r}}function subtaskService(t,e){function o(e,o){return t(e.$ref().child(o))}function s(t,e){e&&e.trim()&&t.$add({name:e,checked:!1})}function n(t,e){t[e].checked=!t[e].checked,t.$save(e)}function a(t,o){function s(){t.$save(o)}i&&e.cancel(i),i=e(s,500)}function c(t,e){t.$remove(e)}var i;return{loadSubtasks:o,addSubtask:s,checkSubtask:n,saveSubtask:a,removeSubtask:c}}angular.module("todoPostApp",["ngAnimate","ngCookies","ngTouch","ngSanitize","ngResource","ngRoute","firebase"]).config(configure).constant("FBURL","https://whatevermyman.firebaseio-demo.com/"),configure.$inject=["$routeProvider"],angular.module("todoPostApp").directive("tdpPost",tdpPost),TodoPostCtrl.$inject=["postService"],angular.module("todoPostApp").directive("tdpDrag",tdpDrag),tdpDrag.$inject=["$document"],angular.module("todoPostApp").directive("chooseColor",chooseColor),angular.module("todoPostApp").directive("subtasks",subtasks),SubtaskCtrl.$inject=["$interval","subtaskService"],angular.module("todoPostApp").directive("tdpMenu",tdpMenu),angular.module("todoPostApp").controller("tdpFilterCtrl",tdpFilterCtrl),tdpFilterCtrl.$inject=["$rootScope","postService"],angular.module("todoPostApp").directive("tdpCanvas",tdpCanvas),CanvasCtrl.$inject=["postService"],angular.module("todoPostApp").factory("postService",postService),postService.$inject=["$firebaseArray","FBURL","$timeout"],angular.module("todoPostApp").factory("subtaskService",subtaskService),subtaskService.$inject=["$firebaseArray","$timeout"],angular.module("todoPostApp").run(["$templateCache",function(t){t.put("app/main/main.html",'<tdp-canvas ng-transclude=""><tdp-menu></tdp-menu><tdp-post ng-repeat="(key,post) in canvas.posts | filter:query | filter: {checked: filterState}" posts="canvas.posts" post="post" key="key" task-list="canvas.taskList" on-remove="canvas.removePost(key,taskId)" tdp-drag=""></tdp-post></tdp-canvas>'),t.put("app/components/menu/menu.html",'<header class="menu-container"><nav class="top-menu" role="navigation"><a class="app-name" href="/">TodoPostIt</a><div class="search-posts"><input ng-model="query"></div><ul ng-controller="tdpFilterCtrl as ctrl" class="filter-posts" ng-click="ctrl.toggleActive($event); ctrl.filterPosts($event)"><li class="active" ng-click="ctrl.filterAll()">All</li><li ng-click="ctrl.filterActive()">Active</li><li ng-click="ctrl.filterCompleted()">Completed</li><li class="clear-posts" ng-click="ctrl.clearCompleted()">Clear Completed</li></ul><a ng-click="tdpMenu.toggleSideMenu()" class="side-menu-btn unselectable">Menu</a></nav><nav class="side-menu" role="navigation" ng-hide="tdpMenu.sideMenuOn"><a href="/" class="app-name">TodoPostIt</a><ul class="user-actions"><li><a href="javascript:void(0)">Sign Up</a></li><li><a href="javascript:void(0)">Log In</a></li><li><a href="javascript:void(0)">About</a></li></ul><ul ng-controller="tdpFilterCtrl as ctrl" class="filter-options" ng-click="ctrl.toggleActive($event); ctrl.filterPosts($event)"><li class="active" ng-click="ctrl.filterAll()">All</li><li ng-click="ctrl.filterActive()">Active</li><li ng-click="ctrl.filterCompleted()">Completed</li><li class="clear-posts" ng-click="ctrl.clearCompleted()">Clear Completed</li></ul><div class="creator-info"><a class="github-icon" href="https://github.com/gc-client-side/todo-post-app">Source on GitHub</a><p>Created By<br><a href="http://slevin.im/">Slevin</a> & <a href="https://github.com/joehandlebar">Sukhoon</a></p></div></nav><div class="background-overlay" ng-show="sideMenuOn" ng-click="toggleSideMenu()"></div></header>'),t.put("app/components/subtasks/subtasks.html",'<div class="subtaskInput-container" ng-keydown="st.addSubtask($event)"><input class="subtaskInput" ng-model="st.newTask" placeholder="subtask"> <button ng-click="st.addSubtask($event)">+</button></div><ul class="subtasks"><li ng-repeat="(key,subtask) in st.subtasks" class="subtask {{subtask.checked ? \'checked\' : \'\'}}"><input type="text" ng-model="subtask.name" ng-change="st.saveSubtask(key)"><i class="fa fa-check-circle" ng-click="st.checkSubtask(key)"></i> <i class="fa fa-times" ng-click="st.removeSubtask(key)"></i></li></ul>'),t.put("app/components/todo/todo.html",'<div class="post {{\'post-\' + td.post.color}} {{td.post.checked ? \'post-checked\' : \'\'}}" ng-style="td.post.position"><div class="post-colors"><div class="post-color selected post-{{td.post.color}}"></div><choose-color ng-repeat="color in td.colors" color="{{color}}" post="td.post" class="post-color {{ (color !== td.post.color) ? \'post-\' + color : \'empty\'}}"></choose-color></div><div class="post-buttons"><i class="fa fa-check-circle" ng-click="td.checkPost(td.key)"></i> <i class="fa fa-times" ng-click="td.onRemove({key: td.key, taskId: td.post.taskId})"></i></div><input type="text" class="post-title" placeholder="Title" ng-model="td.post.title" ng-change="td.savePost(td.key)"> <textarea cols="33" rows="3" class="post-description" ng-model="td.post.description" ng-change="td.savePost(td.key)" placeholder="description"></textarea><subtasks task-list="td.taskList" task-id="td.post.taskId"></subtasks></div>')}]);